{"ast":null,"code":"export default {\n  name: 'AlterarIdioma',\n  data() {\n    return {\n      selectedLanguage: '',\n      // Variável para armazenar a língua selecionada\n      showShare: false // Adiciona uma variável para controlar a exibição da div share\n    };\n  },\n\n  methods: {\n    setLocale(locale) {\n      this.$i18n.locale = locale;\n      this.selectedLanguage = locale; // Atualiza a variável com a língua selecionada\n      this.showShare = false; // Esconde a div share quando uma linguagem é selecionada\n    },\n\n    toggleShare() {\n      this.showShare = !this.showShare; // Alterna a exibição da div share ao clicar no botão\n    }\n  },\n\n  mounted() {\n    document.addEventListener('click', event => {\n      if (!event.target.closest('.selectLang')) {\n        this.showShare = false; // Esconde a div share quando clicar fora da div selectLang\n      }\n    });\n  },\n\n  destroyed() {\n    document.removeEventListener('click', () => {}); // Remove o evento de click no documento quando o componente é destruído\n  }\n};","map":{"version":3,"names":["name","data","selectedLanguage","showShare","methods","setLocale","locale","$i18n","toggleShare","mounted","document","addEventListener","event","target","closest","destroyed","removeEventListener"],"sources":["C:\\Users\\danie\\Documents\\GitHub\\portifolio_vue\\src\\components\\AlterarIdioma.vue"],"sourcesContent":["<template>\r\n  <div class=\"selectLang\" @click=\"toggleShare\">\r\n    <div class=\"iconeWorld\"></div>\r\n    <div class=\"langue\">{{ selectedLanguage }}</div>\r\n    <div class=\"share\" v-show=\"showShare\">\r\n      <button class=\"btn\" @click=\"setLocale('pt-BR')\" title=\"Português br\">\r\n        <img src=\"../assets/img/brazil-svgrepo-com.svg\" alt=\"pt-br\" srcset=\"pt-br\">\r\n      </button>\r\n      <button class=\"btn\" @click=\"setLocale('es')\" title=\"Español\">\r\n        <img src=\"../assets/img/spain-svgrepo-com.svg\" alt=\"es\" srcset=\"es\">\r\n        <span class=\"tooltiptext2\"></span>\r\n      </button>\r\n      <button class=\"btn\" @click=\"setLocale('en')\" title=\"Ingles\">\r\n        <img src=\"../assets/img/united-states-svgrepo-com.svg\" alt=\"en\" srcset=\"en\">\r\n      </button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'AlterarIdioma',\r\n  data() {\r\n    return {\r\n      selectedLanguage: '',// Variável para armazenar a língua selecionada\r\n      showShare: false // Adiciona uma variável para controlar a exibição da div share\r\n    };\r\n  },\r\n  methods: {\r\n    setLocale(locale) {\r\n      this.$i18n.locale = locale;\r\n      this.selectedLanguage = locale;// Atualiza a variável com a língua selecionada\r\n      this.showShare = false; // Esconde a div share quando uma linguagem é selecionada\r\n    },\r\n    toggleShare() {\r\n      this.showShare = !this.showShare; // Alterna a exibição da div share ao clicar no botão\r\n    }\r\n  },\r\n  mounted() {\r\n    document.addEventListener('click', (event) => {\r\n      if (!event.target.closest('.selectLang')) {\r\n        this.showShare = false; // Esconde a div share quando clicar fora da div selectLang\r\n      }\r\n    });\r\n  },\r\n  destroyed() {\r\n    document.removeEventListener('click', () => {}); // Remove o evento de click no documento quando o componente é destruído\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.selectLang {\r\n  display: flex;\r\n  flex-flow: column nowrap;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background: rgb(0, 255, 38);\r\n  height: 36px;\r\n  width: 180px;\r\n  border-radius: 8px;\r\n  position: relative; // Adiciona uma posição relativa para a div poder ter um elemento filho absoluto\r\n\r\n  .iconeWorld {\r\n    position: absolute;\r\n    left: 10px;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    height: 20px;\r\n    width: 20px;\r\n    background-color: white;\r\n    border-radius: 50%;\r\n  }\r\n\r\n  .langue {\r\n    margin-right: 40px;\r\n  }\r\n\r\n  .share {\r\n    position: absolute;\r\n    top: 100%;\r\n    left: 0;\r\n    display: none;\r\n    flex-direction: column;\r\n    gap: 1em;\r\n    transition: 0.4s ease-in-out;\r\n    background-color: white;\r\n    width: 100%;\r\n    &.active {\r\n      display: flex;\r\n    }\r\n\r\n  }\r\n\r\n  .btn {\r\n    width: 100%;\r\n    height: 3em;\r\n    outline: none;\r\n    border: none;\r\n    background-color: transparent;\r\n    transition: 0.4s all;\r\n    cursor: pointer;\r\n    }\r\n  }\r\n  </style>\r\n"],"mappings":"AAoBA,eAAe;EACbA,IAAI,EAAE,eAAe;EACrBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,gBAAgB,EAAE,EAAE;MAAC;MACrBC,SAAS,EAAE,KAAI,CAAE;IACnB,CAAC;EACH,CAAC;;EACDC,OAAO,EAAE;IACPC,SAASA,CAACC,MAAM,EAAE;MAChB,IAAI,CAACC,KAAK,CAACD,MAAK,GAAIA,MAAM;MAC1B,IAAI,CAACJ,gBAAe,GAAII,MAAM,CAAC;MAC/B,IAAI,CAACH,SAAQ,GAAI,KAAK,EAAE;IAC1B,CAAC;;IACDK,WAAWA,CAAA,EAAG;MACZ,IAAI,CAACL,SAAQ,GAAI,CAAC,IAAI,CAACA,SAAS,EAAE;IACpC;EACF,CAAC;;EACDM,OAAOA,CAAA,EAAG;IACRC,QAAQ,CAACC,gBAAgB,CAAC,OAAO,EAAGC,KAAK,IAAK;MAC5C,IAAI,CAACA,KAAK,CAACC,MAAM,CAACC,OAAO,CAAC,aAAa,CAAC,EAAE;QACxC,IAAI,CAACX,SAAQ,GAAI,KAAK,EAAE;MAC1B;IACF,CAAC,CAAC;EACJ,CAAC;;EACDY,SAASA,CAAA,EAAG;IACVL,QAAQ,CAACM,mBAAmB,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE;EACnD;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}